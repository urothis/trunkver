name: TrunkVer Release
on:
  push:
    branches: [ main ]
permissions:
    actions: write
    contents: write
    pull-requests: read
env:
  CARGO_TERM_COLOR: always
jobs:
  build-trunkver:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04
            output: trunkver
          - target: x86_64-apple-darwin
            os: macos-latest
            output: trunkver
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            output: trunkver.exe
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      if: |
        startsWith(matrix.target, 'x86_64-apple-darwin') ||
        startsWith(matrix.target, 'x86_64-pc-windows-msvc')
      with:
        toolchain: nightly
        target:  ${{ matrix.target }}
        override: true
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      if: startsWith(matrix.target, 'x86_64-unknown-linux-gnu')
      with:
        toolchain: nightly
        override: true
    - name: Build release
      if: |
        startsWith(matrix.target, 'x86_64-apple-darwin') ||
        startsWith(matrix.target, 'x86_64-pc-windows-msvc')
      run: |
        cargo build --target ${{ matrix.target }} --release
    - name: Build release
      if: startsWith(matrix.target, 'x86_64-unknown-linux-gnu')
      run: |
        cargo build --release
    - name: Copy / Rename utility
      if: |
        startsWith(matrix.target, 'x86_64-apple-darwin') ||
        startsWith(matrix.target, 'x86_64-pc-windows-msvc')
      run: |
        cp target/${{matrix.target}}/release/${{ matrix.output }} ${{ matrix.output }}-${{ matrix.target }}
        tar -czvf trunkver-${{ matrix.target }}.tgz ${{ matrix.output }}-${{ matrix.target }}
    - name: Copy / Rename utility
      if: startsWith(matrix.target, 'x86_64-unknown-linux-gnu')
      run: |
          cp target/release/${{ matrix.output }} ${{ matrix.output }}-${{ matrix.target }}
          tar -czvf trunkver-${{ matrix.target }}.tgz ${{ matrix.output }}-${{ matrix.target }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}-${{ matrix.target }}
        path: ${{ matrix.output }}-${{ matrix.target }}
    - name: Upload binary to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: trunkver-${{ matrix.target }}.tgz
        asset_name: trunkver-${{ matrix.target }}.tgz
        tag: ${{ github.ref }}
        overwrite: true
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: TrunkVer
        id: trunkver
        uses: ./
      - run: |
          echo "TrunkVer Version: ${{ steps.trunkver.outputs.version }}"
      - name: Create Release
        uses: comnoco/create-release-action@main
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.trunkver.outputs.version_with_v }}
          release_name: Release ${{ steps.trunkver.outputs.version_with_v }}
          body: Release ${{ steps.trunkver.outputs.version }}
      - name: Change Cargo.toml version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.TrunkVer.outputs.version }}\"/" crates/cli/Cargo.toml
          cat crates/cli/Cargo.toml
      - name: cargo login
        run: cargo login ${{ secrets.CRATES_IO_API_TOKEN }}
      - name: cargo publish
        run: |-
          cargo \
            publish \
            -p trunkver \
            --all-features \
            --allow-dirty
